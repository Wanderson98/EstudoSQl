Server=localhost\SQLEXPRESS01;Database=master;Trusted_Connection=True;

--SQL SERVER, POSTGRES, ORACLE, MYSQL'

https://github.com/Microsoft/sql-server-samples/releases/download/adventureworks/AdventureWorks2017.bak
foi usado o banco de dados acima para os testes. 
-----------------------------------------------------------------------------------------------------
 Comandos SQL

 DDL - Linguagem definição de dados
      -- Create
      -- Drop
      -- Alter
      -- Truncate 
 DML - Linguagem de Manipulação de Dados
      -- Inserte
      -- Update
      -- Delete
 DQL - Linguagem de consultao aos dados
      -- Select
 DCL  - Linguagem de Controle de Dados
      -- Grant
      -- Revoke
 TCL - Linguagem de Controle de transação
      -- Commit
      -- RollBack

      <Conteudo obrigatorio>
      {conteudo adicional}
 
Sintaxe Create- CREATE DATABASE <NomeDoBancoDeDados> Cria banco de dados
Sintaxe DROP - DROP <database ou table> <nomeDoBanco ou nomeDaTabela > Apagar banco
Sintaxe Backup - BACKUP DATABASE <nomeBancoDeDAdos> TO DISK = <Path ou caminho \ arquivo destino.bak>; Faz Backup
Sintaxe Use - use <database> seleciona o banco de dados a receber os comandos.
Sintaxe Alter - ALTER TABLE <nomeDaTabela> Add <nomedoCampo> <tipo de dado> para adicionar campo a tabela
                ALTER TABLE <nomeDaTabela> Drop <nomedoCampo> <tipo de dado> para excluir campo da tabela
-- criar tabelas importando campos de outra tabela
Create table <novatabela> as Select <NomeCampoOrigem1, NomeCampoOrigem2> FROM <tabelaOrigem>

-- Inserir dados na tabela

Insert Into <nome tabela> (coluna1, coluna2) Value (valorcampo1, valorcampo2)
Create TABLE <nome da tabela> (<Nome do campo> <tipo de dado>,<Nome do campo> <tipo de dado>,<Nome do campo> <tipo de dado> )
-----------------------------------------------------------------------------------------------------------------------------------------------------
exemplo comandos banco de dados AdventureWorksDW2019
select * from DimEmployee;

Select FirstName, title, DepartmentName, EmailAddress, VacationHours from DimEmployee where VacationHours Between 50 and 90;

Select FirstName, hireDate,DepartmentName from DimEmployee where firstname like 'A____%'   ;


select * from DimEmployee where FirstName in ('Kevin', 'Terri', 'Rob');

select * from DimSalesTerritory;

select * from DimSalesTerritory where SalesTerritoryGroup not in('europe', 'pacific');
select * from DimSalesTerritory where SalesTerritoryGroup  in('europe', 'pacific');

select * From FactInternetSales;

select ProductKey,UnitPrice From FactInternetSales;
------------------------------------------------------------------------------------------------------
create database Teste;

use teste;

Create table vendas (
		VendasID int not null identity(100,1) primary key,
		ClienteID int not null,
		FuncionarioID int not null,
		ProdutoId int not null,
		Quantidade int not null,
		ValorTotal decimal(10,2) not null,
		FormaPagamentoID int not null,
		DataVEnda date not null,
		StatusID int not null);

drop table vendas;

insert into vendas(product) Values (2,100, 30, 5, 2000.0, 2, '10-05-2022', 1),
(5,230, 5,  2, 853.0, 1, '09-05-2022', 2), (6 ,123, 11,2, 100.0, 3, '3-05-2022', 3), (3,120, 11,1, 400.0, 1, '10-05-2022', 1);

select * from vendas
------------------------------------------------------------------------------------------------------------------------------
CREATE DATABASE Livros;

use livros;

Create Table Livro(
		LivroID int identity(100,1),
		LivroNome varchar(60),
		ISBN varchar(10),
		AutorID int, 
		DataPublicacao date,
		PrecoLivro decimal (10,2),
		EditoraID int
);

Create Table Autor(
	AutorID int identity(1,1),
	NomeAutor varchar(30),
	SobrenomeAutor varchar(30)
);

CREATE TABLE EDITORA(
	EditoraID int identity(1,1),
	EditoraNome varchar(50)
	);

INSERT INTO Autor (NomeAutor, SobrenomeAutor) Values ('Daniel', 'Barret'), ('Gerald','Carter'), ('Mark','Sobel'), ('Willian','Stanek'), ('Richard','Blum');

INSERT INTO EDITORA (EditoraNome) Values('Abril'),('O"Reilly'), ('Microsoft Press'),('Wiley');
INSERT INTO Livro (LivroNome, ISBN, AutorID, DataPublicacao, PrecoLivro, EditoraID) VALUES ('Linux Command Line and Shell Scripting','143856969',5 , '2009-12-21',68.35 ,4 ),
('SSH, the Secure Shell','127658789',1 , '2009-12-21',58.30 ,2 ), ('Using Samba','123856789',2 , '2009-12-21',61.45 ,2 );

INSERT INTO Livro (LivroNome, ISBN, AutorID, DataPublicacao, PrecoLivro, EditoraID) VALUES ('Fedora and Red Hat Linux','123346789',3 , '2010-11-01',62.24 ,1 ),
('Windows Server 2012 Inside Out','123356789',4 , '2004-05-17',66.80 ,3 ), ('Microsoft Exchange Serve 2010','123346789',4 , '2000-12-21',45.30 ,3 );

Select * from Livro;

SELECT * FROM livro INNER JOIN autor ON livro.Autorid = autor.AutorID; 

SELECT Livro.LivroNome, Livro.ISBN, Autor.NomeAutor FROM Livro INNER JOIN Autor ON Livro.AutorID = Autor.AutorID;

SELECT Livro.LivroNome as Livros, EDITORA.EditoraNome as Editora from Livro inner join EDITORA on livro.EditoraID = EDITORA.EditoraID where EDITORA.EditoraNome like 'M%';

SELECT Livro.LivroNome as Livro, Autor.NomeAutor as Autor, EDITORA.EditoraNome as Editora, Livro.PrecoLivro as 'Preço do Livro' from Livro inner join Autor on livro.AutorID = Autor.AutorID
inner join EDITORA on Livro.EditoraID = EDITORA.EditoraID where EDITORA.EditoraNome LIKE 'O%' order by Livro.PrecoLivro asc;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

select avg(UnitPrice) From FactInternetSales;
select top 10 UnitPrice From FactInternetSales;
Tipos de dados SQL- 
tipo               tamanho                        armazenmento
char(n)           até 8.000  caracteres           tamanho definido      * erro com o C# pq o char da Linguagem só aceita 1 caractere
varchar(n)        até 8.000  caracteres           2 bytes + número de caracteres
varchar(max)      até 1.073.741.824caracteres     2 bytes + número de caracteres
text              até 2Gb de texto                4bytes + número de caracteres
nchar             fixo 4.000 caracteres           Número fixo * 2
nvarchar          fixo 4.000 caracteres           
database          armazena só a data
decimal           decimal(10,2) primero numero é o número de caracteres e o segundo a quantidade de casas decimais

-----------------------------------------------------
SELECT - COMANDO PARA REALIZAR UMA BUSCA EM CIMA DE DADOS 
SELECIONAR UMA COLUNA, OU MAIS, OU TODAS DE UMA TABELA

EX: SELECT coluna1,coluna2 FROM tabela
ou seja, estou buscando os dados da coluna1 e da coluna2 de uma tabela.

SELECT * FROM tabela - o * é usado para buscar todas as colunas da tabela

Os comandos Sql por convenção, usa-se todas as letras em maiusculo.

ex: SELECT * FROM person.Person 

é possivel filtrar os dados consultados, 

SELECT Title FROM person.Person; 

Nesse caso estou buscando somente a coluna Title da tabela person.person

SELECT * FROM person.EmailAddress;

agora estou buscando tudo da tabela person.EmailAddress

Extrair first name e last name da tabela person.person

SELECT FirstName, LastName FROM person.Person;
------------------------------------------------------------------------------------
DISTINCT é usado para omitir dados duplicados durante a contulta, resultado em dados únicos, sua sintaxe é.

SELECT DISTINCT conluna1 FROM tabela;

Verfica os nomes únicos tem na tabela person.person
ex: SELECT DISTINCT FirstName FROM person.Person;

Vê quantos sobrenomes únicos tem na tabela person.person
SELECT DISTINCT LastName FROM person.Person;

--------------------------------------------------------------------------------------
WHERE é usado para extrair alguns dados particulares da tabela,
a sintaxe dele é 
SELECT coluna FROM tabela WHERE condicao;

Pode se usar operadores lógicos 

[
    OPERADORES LÓGICOS      DESCRIÇÃO
             =               IGUAL
             >               MAIOR QUE
             <               MENOR QUE
             >=              MAIOR IGUAL
             <=              MENOR IGUAL
             <>              DIFERENTE DE
             AND             OPERADOR LÓGICO E
             OR              OPERADOR LÓGICO OU

]

SELECT * FROM Person.Person WHERE LastName = 'miller';

retorna todos os dados ONDE o sobrenome da pessoa é Miller 

SELECT * FROM Person.Person WHERE LastName = 'miller' AND FirstName = 'anna';

Nesse caso faz a mesma consulta anterior e usa o operador lógico AND para fazer mais uma comparação e filtrar ainda mais o resultado
resultando apenas se o sobrenome for miller E o primeiro nome for anna

SELECT * FROM Person.Person WHERE LastName = 'miller' or FirstName = 'anna';

Se usar o operador lógico OR, ou, como no comando acima, ele retorna todos os dados onde o sobrenome é Miller OU o primeiro nome é Anna,
é outra comparação.

SELECT * FROM Production.Product WHERE Color = 'red' OR color = 'blue';

como esse comando, retorna todos os produtos da tabela production.product, onde as cores são, ou red, vermelho, ou blue, azul.

SELECT * FROM Production.Product WHERE ListPrice > 1500 and ListPrice < 3000;

esse comando usa o comparador matemático e lógico, para retornas os dados onde o preço listado é maior que 1500 E menor que 3000.

SELECT * FROM Production.Product WHERE Color <> 'red';

retorna os dados onde os produtos NÃO são vermelhos

SELECT Name FROM Production.Product WHERE Weight > 500 AND Weight <= 700;

SELECT * FROM HumanResources.Employee WHERE MaritalStatus = 'M' AND SalariedFlag = 1 ;

SELECT * FROM person.Person WHERE FirstName = 'Peter' and LastName = 'Krebs';
SELECT EmailAddress FROM person.EmailAddress WHERE BusinessEntityID = 26;
 -------------------------------------------------------------------------------------------------------------------------------------------------
 COUNT 

 sintaxe

 SELECT COUNT(*) FROM TABELA

 faz a contagem de todas as colunas na tabela, se quiser saber a contagem especifica de uma tabela, coloca o nome da tabela dentro do 
 parenteses, pode usar dentro do parenteses o DISTINCT para contar tbm somento os valores únicos.
 ex
 SELECT COUNT(Title) FROM Person.Person

 ele retorna a contagem dos titulos da tabela person.person
 ----------------------------------------------------------------------------------------------------
 TOP
   Ele limita a quantidade de resultados que é retornado em uma consulta
  sintaxe
  SELECT TOP 100 * FROM TABELA

  limita o resultado aos 100 primeiros resultados da consulta. 

  ------------------------------------------------------------------------------------------------------
  Order By  
  Ordena os resultados de uma coluna forma crescente ou decrescente de alguma forma
 
  sintaxe

  SELECT coluna1,coluna2 FROM tabela ORDER BY coluna1 (ASC(Crescente) ou Desc (Decrescente))

  Exemplo

SELECT TOP 4 name, productNumber FROM production.products ORDER BY ProductID ASC

esse comando vai retornar os 4 primeiros dados das colunas name e productNumber, da tabela, production.products, ordenando pelo ProductID de forma crescente

-------------------------------------------------------------------------------------------------------------
Between, ele é usado para encontrar valores entre um valor minimo e um valor máximo, between significa entre;

Ex: BETWEEN min AND max;

exemplo, em uma tabela vc quer filtrar os valores de idade entre 15 a 20 anos.
 SELECT * FROM pessoas WHERE idade BETWEEN 15 and 20;
 seria o mesmo que usar a lógica 

 idade >= 15 AND idade <=20

 -------------------------------------------------------------------------

